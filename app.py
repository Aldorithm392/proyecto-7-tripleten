import streamlit as st
import pandas as pd
import plotly.express as px

# Configurar la p치gina
st.set_page_config(page_title="An치lisis de Veh칤culos", layout="wide")

# T칤tulo principal
st.header("游뚱 An치lisis de Datos de Veh칤culos en Venta")

# Cargar los datos
@st.cache_data  # Esto mejora el rendimiento
def load_data():
    data = pd.read_csv('vehicles_us.csv')
    return data

car_data = load_data()

# Mostrar informaci칩n b치sica
st.subheader("Vista previa de los datos")
st.write(f"El dataset contiene {car_data.shape[0]} veh칤culos y {car_data.shape[1]} caracter칤sticas")

# Crear dos columnas para los controles
col1, col2 = st.columns(2)

# Bot칩n para el histograma
with col1:
    hist_button = st.button('Construir histograma')

# Bot칩n para el gr치fico de dispersi칩n
with col2:
    scatter_button = st.button('Construir gr치fico de dispersi칩n')

# Mostrar histograma si se presiona el bot칩n
if hist_button:
    st.write('### Histograma del Kilometraje de los Veh칤culos')
    
    # Crear histograma
    fig = px.histogram(car_data, 
                       x="odometer",
                       title="Distribuci칩n del Kilometraje",
                       labels={"odometer": "Kilometraje", "count": "Cantidad"})
    
    # Mostrar el gr치fico
    st.plotly_chart(fig, use_container_width=True)

# Mostrar gr치fico de dispersi칩n si se presiona el bot칩n
if scatter_button:
    st.write('### Relaci칩n entre Precio y Kilometraje')
    
    # Crear gr치fico de dispersi칩n
    fig = px.scatter(car_data, 
                     x="odometer", 
                     y="price",
                     title="Precio vs Kilometraje",
                     labels={"odometer": "Kilometraje", "price": "Precio ($)"})
    
    # Mostrar el gr치fico
    st.plotly_chart(fig, use_container_width=True)

# Secci칩n adicional con casillas de verificaci칩n (opcional pero recomendado)
st.subheader("Visualizaciones con casillas de verificaci칩n")

# Crear casillas de verificaci칩n
build_histogram = st.checkbox('Mostrar histograma de a침os')
build_scatter = st.checkbox('Mostrar dispersi칩n precio vs a침o')

if build_histogram:
    fig = px.histogram(car_data, 
                       x="model_year",
                       title="Distribuci칩n de A침os de los Modelos",
                       labels={"model_year": "A침o del Modelo", "count": "Cantidad"})
    st.plotly_chart(fig, use_container_width=True)

if build_scatter:
    fig = px.scatter(car_data, 
                     x="model_year", 
                     y="price",
                     title="Precio por A침o del Modelo",
                     labels={"model_year": "A침o del Modelo", "price": "Precio ($)"})
    st.plotly_chart(fig, use_container_width=True)